name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['main']
    # paths-ignore: ['docs/**']

  push:
    branches: ['master', 'main']
    # paths-ignore: ['docs/**']

jobs:
  check-branch:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: check-pr-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if the PR's branch is updated
        uses: osl-incubator/gh-check-pr-is-updated@1.0.0
        with:
          remote_branch: origin/main
          pr_sha: ${{ github.event.pull_request.head.sha }}
  linter:
    runs-on: ubuntu-latest

    concurrency:
      group: ci-linter-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: poc-django-reactjs
          auto-update-conda: true
          conda-solver: libmamba

      - name: Install dependencies
        run: |
          poetry check
          poetry config virtualenvs.create false
          poetry install

      - name: Linter
        run: |
          pre-commit install
          pre-commit run --all-files

  # With no caching at all the entire ci process takes 3m to complete!
  test:
    runs-on: ubuntu-latest

    concurrency:
      group: ci-tests-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    env:
      SUGAR_ENV: dev

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: poc-django-reactjs
          auto-update-conda: true
          conda-solver: libmamba

      - name: Install dependencies
        run: |
          poetry check
          poetry config virtualenvs.create false
          poetry install

      - name: Build the Stack
        run: sugar build --all

      # - name: Build the docs
      #   run: docker compose -f docker-compose.docs.yml build docs

      # - name: Check DB Migrations
      #   run: docker compose -f docker-compose.local.yml run --rm django python manage.py makemigrations --check

      # - name: Run DB Migrations
      #   run: docker compose -f docker-compose.local.yml run --rm django python manage.py migrate

      # - name: Run Django Tests
      #   run: docker compose -f docker-compose.local.yml run django pytest

      # - name: Tear down the Stack
      #   run: docker compose -f docker-compose.local.yml down
